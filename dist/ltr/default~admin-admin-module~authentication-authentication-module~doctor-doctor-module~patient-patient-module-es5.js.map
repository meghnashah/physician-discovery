{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js"],"names":["_c0","_c1","enterDuration","_c2","MAT_RADIO_DEFAULT_OPTIONS","providedIn","factory","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","color","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatRadioGroup","multi","MatRadioChange","source","value","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_value","_name","_selected","_isInitialized","_labelPosition","_disabled","_required","_controlValueAccessorChangeFn","onTouched","change","_updateRadioButtonNames","v","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","checked","selected","_radios","forEach","radio","name","_markForCheck","isAlreadySelected","emit","markForCheck","fn","isDisabled","disabled","ɵfac","_MatRadioGroupBase_Factory","t","ɵdir","type","inputs","labelPosition","required","outputs","ctorParameters","propDecorators","ngDevMode","MatRadioGroup_Factory","ɵMatRadioGroup_BaseFactory","selectors","contentQueries","MatRadioGroup_ContentQueries","rf","ctx","dirIndex","MatRadioButton","_t","hostAttrs","exportAs","features","args","descendants","selector","providers","host","MatRadioButtonBase","_elementRef","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","elementRef","_focusMonitor","_radioDispatcher","_animationMode","_providerOverride","tabIndex","_uniqueId","id","_checked","_removeUniqueSelectionListener","listen","newCheckedState","notify","_setDisabled","_color","options","origin","focusVia","_inputElement","nativeElement","focus","monitor","subscribe","focusOrigin","_touch","stopMonitoring","disableRipple","event","stopPropagation","groupValueChanged","_emitChangeEvent","_MatRadioButtonBase_Factory","String","undefined","viewQuery","_MatRadioButtonBase_Query","first","ariaLabel","ariaLabelledby","ariaDescribedby","changeDetector","focusMonitor","radioDispatcher","animationMode","providerOverride","MatRadioButton_Factory","ɵcmp","hostVars","hostBindings","MatRadioButton_HostBindings","MatRadioButton_focus_HostBindingHandler","ngContentSelectors","decls","vars","consts","template","MatRadioButton_Template","MatRadioButton_Template_input_change_5_listener","$event","_onInputChange","MatRadioButton_Template_input_click_5_listener","_onInputClick","_r0","inputId","_isRippleDisabled","directives","styles","encapsulation","changeDetection","decorators","None","OnPush","MatRadioModule","MatRadioModule_Factory","ɵmod","ɵinj","imports","ngJitMode","declarations","exports","MatSelect_span_4_Template","ctx_r2","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_ng_content_2_Template","MatSelect_span_5_Template","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","ctx_r8","_panelDoneAnimatingStream","next","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r10","_handleKeydown","ctx_r4","_getPanelTheme","_transformOrigin","_triggerFontSize","panelClass","multiple","_getPanelAriaLabelledby","_c3","matSelectAnimations","transformPanelWrap","optional","transformPanel","transform","minWidth","opacity","getMatSelectDynamicMultipleError","Error","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","deps","useFactory","MatSelectChange","MatSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","MAT_SELECT_TRIGGER","MatSelectTrigger","MatSelectTrigger_Factory","_MatSelectBase","_viewportRuler","_changeDetectorRef","_ngZone","_dir","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_defaultOptions","_a","_b","_c","_panelOpen","_compareWith","o1","o2","_uid","_triggerAriaLabelledBy","_destroy","_onChange","_onTouched","_valueId","_overlayPanelClass","overlayPanelClass","_focused","controlType","_multiple","_disableOptionCentering","disableOptionCentering","optionSelectionChanges","changes","pipe","map","option","onSelectionChange","onStable","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","typeaheadDebounceInterval","_typeaheadDebounceInterval","_scrollStrategyFactory","_scrollStrategy","parseInt","_placeholder","stateChanges","_selectionModel","_initializeSelection","Array","isArray","_setSelectionByValue","_id","_panelDoneAnimating","panelOpen","_initKeyManager","changed","added","select","removed","deselect","_resetOptions","newAriaLabelledby","_getTriggerAriaLabelledby","element","setAttribute","removeAttribute","updateErrorState","_keyManager","withTypeAhead","complete","close","open","_canOpen","withHorizontalOrientation","_highlightCorrectOption","_isRtl","empty","selectedOptions","viewValue","reverse","join","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","isTyping","altKey","preventDefault","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","some","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","overlayDir","positionChange","detectChanges","_positioningSettled","isEmpty","Promise","resolve","then","setInactiveStyles","clear","currentValue","_selectValue","_sortValues","correspondingOption","updateActiveItem","find","isSelected","error","console","warn","withVerticalOrientation","withHomeAndEnd","withAllowedModifierKeys","tabOut","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","_propagateChanges","setActiveItem","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","_getChangeEvent","setFirstItemActive","length","labelId","getLabelId","labelExpression","isOpen","ids","_ariaDescribedby","_MatSelectBase_Factory","_MatSelectBase_Query","trigger","compareWith","errorStateMatcher","MatSelect","arguments","_scrollTop","_offsetY","_positions","originX","originY","overlayX","overlayY","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","_triggerRect","getBoundingClientRect","getComputedStyle","fontSize","_calculateOverlayPosition","overlayRef","overlayElement","style","index","labelCount","optionGroups","scrollTop","_calculateOverlayOffsetX","offsetX","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","group","leftOverflow","left","rightOverflow","right","width","round","updatePosition","optionHeightAdjustment","height","maxOptionsDisplayed","floor","optionOffsetFromPanelTop","firstDisplayedIndex","_getItemCount","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","items","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","MatSelect_Factory","ɵMatSelect_BaseFactory","MatSelect_ContentQueries","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","toString","errorState","_getAriaActiveDescendant","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","data","animation","animations","MatSelectModule","MatSelectModule_Factory"],"mappings":"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","file":"default~admin-admin-module~authentication-authentication-module~doctor-doctor-module~patient-patient-module-es5.js","sourcesContent":["import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return ɵMatRadioGroup_BaseFactory(t || MatRadioGroup); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\nconst ɵMatRadioGroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                ],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            if (this.checked) {\n                this.radioGroup.selected = this;\n            }\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(String)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String },\n    { type: undefined },\n    { type: String }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }, { type: String }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", null)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵelement(3, \"span\", 3);\n        ɵngcc0.ɵɵelement(4, \"span\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"span\", 7);\n        ɵngcc0.ɵɵelement(8, \"span\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"span\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be removed since it causes some a11y issues (see #21266).\n                    '[attr.tabindex]': 'null',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_GROUP]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵfac = function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); };\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n//# sourceMappingURL=radio.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, ErrorStateMatcher, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/material/form-field';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder);\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue);\n} }\nfunction MatSelect_span_5_ng_content_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_ng_content_2_Template, 1, 0, \"ng-content\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14, 15);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\")(\"aria-multiselectable\", ctx_r4.multiple)(\"aria-label\", ctx_r4.ariaLabel || null)(\"aria-labelledby\", ctx_r4._getPanelAriaLabelledby());\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/**\n * The max height of the select's overlay panel.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n *\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n *\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger',\n                providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }]\n            }]\n    }], null, null); })();\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._required = false;\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() { return this._placeholder; }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() { return this._value; }\n    set value(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() { return this._id; }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = (labelId ? labelId + ' ' : '');\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = function _MatSelectBase_Factory(t) { return new (t || _MatSelectBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\n_MatSelectBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatSelectBase, viewQuery: function _MatSelectBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 1);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatSelectBase.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\n_MatSelectBase.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    panelClass: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSelectBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc6.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], panelClass: [{\n            type: Input\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize =\n                parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this.overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset =\n                Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return ɵMatSelect_BaseFactory(t || MatSelect); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, hostAttrs: [\"role\", \"combobox\", \"aria-autocomplete\", \"none\", \"aria-haspopup\", \"true\", 1, \"mat-select\"], hostVars: 20, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty)(\"mat-select-multiple\", ctx.multiple);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 9, vars: 12, consts: [[\"cdk-overlay-origin\", \"\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder mat-select-min-line\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\", \"mat-select-min-line\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [\"class\", \"mat-select-min-line\", 4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-min-line\"], [1, \"mat-select-panel-wrap\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 14, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"aria-owns\", ctx.panelOpen ? ctx.id + \"-panel\" : null);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._valueId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\nMatSelect.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    customTrigger: [{ type: ContentChild, args: [MAT_SELECT_TRIGGER,] }]\n};\nconst ɵMatSelect_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSelect);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'combobox',\n                    'aria-autocomplete': 'none',\n                    // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                    // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                    // value. At some point we should try to switch it back to being `listbox`.\n                    'aria-haspopup': 'true',\n                    'class': 'mat-select',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                    '[attr.aria-expanded]': 'panelOpen',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    '[class.mat-select-multiple]': 'multiple',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px}\\n\"]\n            }]\n    }], null, { options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MAT_SELECT_TRIGGER]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); };\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, _MatSelectBase, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map"]}
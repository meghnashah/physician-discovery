{"version":3,"sources":["webpack:///src/app/patient/appointments/past-appointment/past-appointment.service.ts","webpack:///src/app/patient/appointments/today-appointment/today-appointment.component.ts","webpack:///src/app/patient/appointments/today-appointment/today-appointment.component.html","webpack:///src/app/patient/appointments/appointments-routing.module.ts","webpack:///src/app/patient/appointments/today-appointment/dialogs/delete/delete.component.ts","webpack:///src/app/patient/appointments/today-appointment/dialogs/delete/delete.component.html","webpack:///src/app/patient/appointments/upcoming-appointment/upcoming-appointment.service.ts","webpack:///src/app/patient/appointments/upcoming-appointment/upcoming-appointment.model.ts","webpack:///src/app/patient/appointments/upcoming-appointment/upcoming-appointment.component.ts","webpack:///src/app/patient/appointments/upcoming-appointment/upcoming-appointment.component.html","webpack:///src/app/patient/appointments/past-appointment/past-appointment.component.ts","webpack:///src/app/patient/appointments/past-appointment/past-appointment.component.html","webpack:///src/app/patient/appointments/appointments.module.ts","webpack:///src/app/patient/appointments/upcoming-appointment/dialogs/delete/delete.component.ts","webpack:///src/app/patient/appointments/upcoming-appointment/dialogs/delete/delete.component.html","webpack:///src/app/patient/appointments/past-appointment/dialogs/delete/delete.component.ts","webpack:///src/app/patient/appointments/past-appointment/dialogs/delete/delete.component.html","webpack:///src/app/patient/appointments/upcoming-appointment/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/patient/appointments/upcoming-appointment/dialogs/form-dialog/form-dialog.component.html"],"names":["PastAppointmentService","httpClient","API_URL","isTblLoading","dataChange","value","dialogData","get","subscribe","data","next","error","console","log","name","message","appointment","id","TodayAppointmentComponent","selector","templateUrl","styleUrls","routes","path","component","AppointmentsRoutingModule","forChild","imports","exports","DeleteComponent","UpcomingAppointmentService","UpcomingAppointment","getRandomID","img","avatar","email","gender","date","Date","time","mobile","doctor","injury","S4","Math","random","toString","substring","$event","stopPropagation","selection","UpcomingAppointmentComponent","dialog","appointmentService","snackBar","displayedColumns","loadData","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","row","select","totalSelect","item","index","findIndex","d","exampleDatabase","splice","refreshTable","showNotification","dialogRef","open","action","afterClosed","result","unshift","getDialogData","foundIndex","x","i","paginator","_changePageSize","pageSize","ExampleDataSource","sort","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","provide","useValue","removeSelectedRows","addNew","refresh","providers","_sort","filterChange","filteredData","pageIndex","displayDataChanges","sortChange","page","getAllUpcomingAppointment","pipe","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB","PastAppointmentComponent","getAllPastAppointment","AppointmentsModule","declarations","DeleteDialogComponent","close","deleteUpcomingAppointment","PastDeleteDialogComponent","deletePastAppointment","confirmDelete","onNoClick","FormDialogComponent","fb","formControl","required","dialogTitle","appointmentForm","createContactForm","hasError","group","minLength","addUpcomingAppointment","getRawValue","confirmAdd"],"mappings":"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","file":"appointments-appointments-module-es5.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { PastAppointment } from \"./past-appointment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\n@Injectable()\r\nexport class PastAppointmentService {\r\n  private readonly API_URL = \"assets/data/past-appointment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<PastAppointment[]> = new BehaviorSubject<\r\n    PastAppointment[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): PastAppointment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllPastAppointment(): void {\r\n    this.httpClient.get<PastAppointment[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addPastAppointment(appointment: PastAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updatePastAppointment(appointment: PastAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /* this.httpClient.put(this.API_URL + appointment.id, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deletePastAppointment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-today-appointment',\r\n  templateUrl: './today-appointment.component.html',\r\n  styleUrls: ['./today-appointment.component.sass']\r\n})\r\nexport class TodayAppointmentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Appointment</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/patient/dashboard\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\">Today</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row clearfix\">\n      <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>Today's Appointments</h2>\n\n          </div>\n          <div class=\"body\">\n            <ul class=\"list-unstyled user-progress list-unstyled-border list-unstyled-noborder\">\n              <li class=\"app-list\">\n                <img alt=\"image\" class=\"mr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig1.jpg\">\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">Dr.Cara Stevens</div>\n                  <div class=\"text-job text-muted mb-0\">Radiologist</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">12 June '20</div>\n                  <div class=\"text-job text-muted mb-0\">09:00-10:00</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\n                  <div class=\"text-job font-16\">CT scans</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\n                  <div class=\"text-job font-16\">+123 676545655</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Status</div>\n                  <div class=\"col-green\">Confirm</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Location</div>\n                  <div class=\"text-job font-16\">Grand Plains Clinic</div>\n                </div>\n                <div class=\"media-cta\">\n                  <td>\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <button mat-icon-button class=\"btn-tbl-reject\">\n                      <mat-icon>close</mat-icon>\n                    </button>\n                  </td>\n                </div>\n              </li>\n              <li class=\"app-list\">\n                <img alt=\"image\" class=\"mr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig2.jpg\">\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">Dr.John Doe</div>\n                  <div class=\"text-job text-muted mb-0\">Cardiologist</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">12 June '20</div>\n                  <div class=\"text-job text-muted mb-0\">11:00-11:30</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\n                  <div class=\"text-job font-16\">heart checkup</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\n                  <div class=\"text-job font-16\">+123 434656764</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Status</div>\n                  <div class=\"col-red\">Cancelled</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Location</div>\n                  <div class=\"text-job font-16\">Genesis Hospital</div>\n                </div>\n                <div class=\"media-cta\">\n                  <td>\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <button mat-icon-button class=\"btn-tbl-reject\">\n                      <mat-icon>close</mat-icon>\n                    </button>\n                  </td>\n                </div>\n              </li>\n              <li class=\"app-list\">\n                <img alt=\"image\" class=\"mr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig3.jpg\">\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">Dr.Airi Satou</div>\n                  <div class=\"text-job text-muted mb-0\">Otolaryngologist</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">12 June '20</div>\n                  <div class=\"text-job text-muted mb-0\">09:15-10:15 </div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\n                  <div class=\"text-job font-16\">Diseases Of The Ear</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\n                  <div class=\"text-job font-16\">+123 45345673</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Status</div>\n                  <div class=\"col-green\">Confirm</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Location</div>\n                  <div class=\"text-job font-16\">Genesis Laboratory</div>\n                </div>\n                <div class=\"media-cta\">\n                  <td>\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <button mat-icon-button class=\"btn-tbl-reject\">\n                      <mat-icon>close</mat-icon>\n                    </button>\n                  </td>\n                </div>\n              </li>\n              <li class=\"app-list\">\n                <img alt=\"image\" class=\"mr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig4.jpg\">\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">Dr.Angelica Ramos</div>\n                  <div class=\"text-job text-muted mb-0\">Dentist</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">12 June '20</div>\n                  <div class=\"text-job text-muted mb-0\">11:00-12:00</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\n                  <div class=\"text-job font-16\">Root Canal</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\n                  <div class=\"text-job font-16\">+123 87654533</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Status</div>\n                  <div class=\"col-green\">Confirm</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Location</div>\n                  <div class=\"text-job font-16\">Clemency Hospital</div>\n                </div>\n                <div class=\"media-cta\">\n                  <td>\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <button mat-icon-button class=\"btn-tbl-reject\">\n                      <mat-icon>close</mat-icon>\n                    </button>\n                  </td>\n                </div>\n              </li>\n              <li class=\"app-list\">\n                <img alt=\"image\" class=\"mr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig6.jpg\">\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">Dr.Jens Brincker</div>\n                  <div class=\"text-job text-muted mb-0\">Endocrinologist</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">12 June '20</div>\n                  <div class=\"text-job text-muted mb-0\">04:00-05:00</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\n                  <div class=\"text-job font-16\">Diabetes</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\n                  <div class=\"text-job font-16\">+123 45678345</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Status</div>\n                  <div class=\"col-red\">Cancelled</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Location</div>\n                  <div class=\"text-job font-16\">Hopevale Clinic</div>\n                </div>\n                <div class=\"media-cta\">\n                  <td>\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <button mat-icon-button class=\"btn-tbl-reject\">\n                      <mat-icon>close</mat-icon>\n                    </button>\n                  </td>\n                </div>\n              </li>\n              <li class=\"app-list\">\n                <img alt=\"image\" class=\"mr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig7.jpg\">\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">Dr.Jamie Blair</div>\n                  <div class=\"text-job text-muted mb-0\">Radiologist</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">12 June '20</div>\n                  <div class=\"text-job text-muted mb-0\">05:00-05:30</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\n                  <div class=\"text-job font-16\">Diabetes</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\n                  <div class=\"text-job font-16\">+123 45678345</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Status</div>\n                  <div class=\"col-green\">Confirm</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Location</div>\n                  <div class=\"text-job font-16\">Pinevale Medical Center</div>\n                </div>\n                <div class=\"media-cta\">\n                  <td>\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <button mat-icon-button class=\"btn-tbl-reject\">\n                      <mat-icon>close</mat-icon>\n                    </button>\n                  </td>\n                </div>\n              </li>\n              <li class=\"app-list\">\n                <img alt=\"image\" class=\"mr-3 rounded-circle\" width=\"40\" src=\"assets/images/user/usrbig8.jpg\">\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">Dr.Nikki Barton</div>\n                  <div class=\"text-job text-muted mb-0\">Endocrinologist</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title font-16\">12 June '20</div>\n                  <div class=\"text-job text-muted mb-0\">06:00-07:00</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Treatement</div>\n                  <div class=\"text-job font-16\">X-Ray</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Contact Number</div>\n                  <div class=\"text-job font-16\">+123 45678345</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Status</div>\n                  <div class=\"col-orange\">Pending</div>\n                </div>\n                <div class=\"media-body\">\n                  <div class=\"media-title text-muted mb-0\">Location</div>\n                  <div class=\"text-job font-16\">Hopevale Clinic</div>\n                </div>\n                <div class=\"media-cta\">\n                  <td>\n                    <button mat-icon-button class=\"btn-tbl-confirm\">\n                      <mat-icon>done</mat-icon>\n                    </button>\n                    <button mat-icon-button class=\"btn-tbl-reject\">\n                      <mat-icon>close</mat-icon>\n                    </button>\n                  </td>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Page404Component } from './../../authentication/page404/page404.component';\r\nimport { UpcomingAppointmentComponent } from './upcoming-appointment/upcoming-appointment.component';\r\nimport { PastAppointmentComponent } from './past-appointment/past-appointment.component';\r\nimport { TodayAppointmentComponent } from './today-appointment/today-appointment.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'today',\r\n    component: TodayAppointmentComponent,\r\n  },\r\n  {\r\n    path: 'upcoming',\r\n    component: UpcomingAppointmentComponent,\r\n  },\r\n  {\r\n    path: 'past',\r\n    component: PastAppointmentComponent,\r\n  },\r\n  { path: '**', component: Page404Component },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppointmentsRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>delete works!</p>\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { UpcomingAppointment } from \"./upcoming-appointment.model\";\r\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\n@Injectable()\r\nexport class UpcomingAppointmentService {\r\n  private readonly API_URL = \"assets/data/upcoming-appointment.json\";\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<UpcomingAppointment[]> = new BehaviorSubject<\r\n    UpcomingAppointment[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): UpcomingAppointment[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllUpcomingAppointment(): void {\r\n    this.httpClient.get<UpcomingAppointment[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + \" \" + error.message);\r\n      }\r\n    );\r\n  }\r\n  addUpcomingAppointment(appointment: UpcomingAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /*  this.httpClient.post(this.API_URL, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateUpcomingAppointment(appointment: UpcomingAppointment): void {\r\n    this.dialogData = appointment;\r\n\r\n    /* this.httpClient.put(this.API_URL + appointment.id, appointment).subscribe(data => {\r\n      this.dialogData = appointment;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteUpcomingAppointment(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { formatDate } from '@angular/common';\r\nexport class UpcomingAppointment {\r\n  id: number;\r\n  img: string;\r\n  name: string;\r\n  email: string;\r\n  gender: string;\r\n  date: string;\r\n  time: string;\r\n  mobile: string;\r\n  doctor: string;\r\n  injury: string;\r\n  constructor(appointment) {\r\n    {\r\n      this.id = appointment.id || this.getRandomID();\r\n      this.img = appointment.avatar || 'assets/images/user/user1.jpg';\r\n      this.name = appointment.name || '';\r\n      this.email = appointment.email || '';\r\n      this.gender = appointment.gender || 'male';\r\n      this.date = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.time = appointment.time || '';\r\n      this.mobile = appointment.mobile || '';\r\n      this.doctor = appointment.mobile || '';\r\n      this.injury = appointment.mobile || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { UpcomingAppointmentService } from \"./upcoming-appointment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { UpcomingAppointment } from \"./upcoming-appointment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { FormDialogComponent } from \"./dialogs/form-dialog/form-dialog.component\";\r\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.component\";\r\nimport { DateAdapter, MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\n\r\n@Component({\r\n  selector: \"app-upcoming-appointment\",\r\n  templateUrl: \"./upcoming-appointment.component.html\",\r\n  styleUrls: [\"./upcoming-appointment.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class UpcomingAppointmentComponent implements OnInit {\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"doctor\",\r\n    \"date\",\r\n    \"time\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"injury\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: UpcomingAppointmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<UpcomingAppointment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  appointment: UpcomingAppointment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public appointmentService: UpcomingAppointmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<UpcomingAppointment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  addNew() {\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        appointment: this.appointment,\r\n        action: \"add\",\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.appointmentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-success\",\r\n          \"Add Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        appointment: row,\r\n        action: \"edit\",\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[\r\n          foundIndex\r\n        ] = this.appointmentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"black\",\r\n          \"Edit Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new UpcomingAppointmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, \"keyup\").subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<UpcomingAppointment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: UpcomingAppointment[] = [];\r\n  renderedData: UpcomingAppointment[] = [];\r\n  constructor(\r\n    public exampleDatabase: UpcomingAppointmentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<UpcomingAppointment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllUpcomingAppointment();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((appointment: UpcomingAppointment) => {\r\n            const searchStr = (\r\n              appointment.email +\r\n              appointment.date +\r\n              appointment.time +\r\n              appointment.doctor +\r\n              appointment.injury +\r\n              appointment.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: UpcomingAppointment[]): UpcomingAppointment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"doctor\":\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case \"email\":\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"time\":\r\n          [propertyA, propertyB] = [a.time, b.time];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Upcoming</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/patient/dashboard\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\">Upcoming Appointments</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"responsive_table\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ml-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Upcoming Appointments</strong></h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"img\">\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\n                  </mat-header-cell>\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\n                      [src]=\"row.img\" />\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"doctor\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.doctor}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"email\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"date\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy' }}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"time\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Time</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.time}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"mobile\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"injury\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Injury/Condition\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.injury}}</mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editCall(row)\">\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteItem(i, row)\">\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { PastAppointmentService } from \"./past-appointment.service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { PastAppointment } from \"./past-appointment.model\";\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PastDeleteDialogComponent } from \"./dialogs/delete/delete.component\";\r\nimport { DateAdapter, MAT_DATE_LOCALE } from \"@angular/material/core\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\n\r\n@Component({\r\n  selector: \"app-past-appointment\",\r\n  templateUrl: \"./past-appointment.component.html\",\r\n  styleUrls: [\"./past-appointment.component.sass\"],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: \"en-GB\" }],\r\n})\r\nexport class PastAppointmentComponent implements OnInit {\r\n  displayedColumns = [\r\n    \"select\",\r\n    \"img\",\r\n    \"doctor\",\r\n    \"date\",\r\n    \"time\",\r\n    \"email\",\r\n    \"mobile\",\r\n    \"injury\",\r\n    \"actions\",\r\n  ];\r\n  exampleDatabase: PastAppointmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<PastAppointment>(true, []);\r\n  index: number;\r\n  id: number;\r\n  appointment: PastAppointment | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public appointmentService: PastAppointmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(\"filter\", { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<PastAppointment>(true, []);\r\n    });\r\n    this.showNotification(\r\n      \"snackbar-danger\",\r\n      totalSelect + \" Record Delete Successfully...!!!\",\r\n      \"bottom\",\r\n      \"center\"\r\n    );\r\n  }\r\n  deleteItem(i: number, row) {\r\n    this.index = i;\r\n    this.id = row.id;\r\n    const dialogRef = this.dialog.open(PastDeleteDialogComponent, {\r\n      data: row,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          \"snackbar-danger\",\r\n          \"Delete Record Successfully...!!!\",\r\n          \"bottom\",\r\n          \"center\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new PastAppointmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, \"keyup\").subscribe(() => {\r\n      if (!this.dataSource) {\r\n        return;\r\n      }\r\n      this.dataSource.filter = this.filter.nativeElement.value;\r\n    });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, \"\", {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<PastAppointment> {\r\n  filterChange = new BehaviorSubject(\"\");\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: PastAppointment[] = [];\r\n  renderedData: PastAppointment[] = [];\r\n  constructor(\r\n    public exampleDatabase: PastAppointmentService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<PastAppointment[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllPastAppointment();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((appointment: PastAppointment) => {\r\n            const searchStr = (\r\n              appointment.email +\r\n              appointment.date +\r\n              appointment.time +\r\n              appointment.doctor +\r\n              appointment.injury +\r\n              appointment.mobile\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: PastAppointment[]): PastAppointment[] {\r\n    if (!this._sort.active || this._sort.direction === \"\") {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = \"\";\r\n      let propertyB: number | string = \"\";\r\n      switch (this._sort.active) {\r\n        case \"id\":\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case \"doctor\":\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case \"email\":\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        case \"date\":\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case \"time\":\r\n          [propertyA, propertyB] = [a.time, b.time];\r\n          break;\r\n        case \"mobile\":\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Past</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/patient/dashboard\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item active\">Past Appointments</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"responsive_table\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ml-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Past Appointments</strong></h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"img\">\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\n                  </mat-header-cell>\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\n                      [src]=\"row.img\" />\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"doctor\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Doctor Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.doctor}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"email\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"date\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy' }}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"time\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Appo. Time</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.time}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"mobile\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.mobile}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"injury\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Injury/Condition\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.injury}}</mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteItem(i, row)\">\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n              <!-- Loading spinner -->\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\n                </mat-progress-spinner>\n              </div>\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MaterialFileInputModule } from \"ngx-material-file-input\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\n\r\nimport { AppointmentsRoutingModule } from \"./appointments-routing.module\";\r\nimport { UpcomingAppointmentComponent } from \"./upcoming-appointment/upcoming-appointment.component\";\r\nimport { DeleteDialogComponent } from \"./upcoming-appointment/dialogs/delete/delete.component\";\r\nimport { FormDialogComponent } from \"./upcoming-appointment/dialogs/form-dialog/form-dialog.component\";\r\nimport { PastAppointmentComponent } from \"./past-appointment/past-appointment.component\";\r\nimport { PastDeleteDialogComponent } from \"./past-appointment/dialogs/delete/delete.component\";\r\nimport { TodayAppointmentComponent } from \"./today-appointment/today-appointment.component\";\r\nimport { DeleteComponent } from \"./today-appointment/dialogs/delete/delete.component\";\r\nimport { UpcomingAppointmentService } from \"./upcoming-appointment/upcoming-appointment.service\";\r\nimport { PastAppointmentService } from \"./past-appointment/past-appointment.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UpcomingAppointmentComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n    PastAppointmentComponent,\r\n    PastDeleteDialogComponent,\r\n    TodayAppointmentComponent,\r\n    DeleteComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AppointmentsRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxDatatableModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MaterialFileInputModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [UpcomingAppointmentService, PastAppointmentService],\r\n})\r\nexport class AppointmentsModule {}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { UpcomingAppointmentService } from '../../upcoming-appointment.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass'],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: UpcomingAppointmentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.appointmentService.deleteUpcomingAppointment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.doctor}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Email: </span>{{ data.email }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\"  >\n      Delete\n    </button>\n    <button mat-flat-button   tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { PastAppointmentService } from '../../past-appointment.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass'],\r\n})\r\nexport class PastDeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PastDeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: PastAppointmentService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.appointmentService.deletePastAppointment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"font-weight-bold\"> Name: </span>{{data.doctor}}</p>\n      </li>\n      <li>\n        <p><span class=\"font-weight-bold\"> Email: </span>{{ data.email }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"font-weight-bold\">Mobile: </span>{{data.mobile}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { UpcomingAppointmentService } from '../../upcoming-appointment.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\nimport { UpcomingAppointment } from '../../upcoming-appointment.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  appointmentForm: FormGroup;\r\n  appointment: UpcomingAppointment;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public appointmentService: UpcomingAppointmentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      console.log(data.appointment.date);\r\n      this.dialogTitle = data.appointment.doctor;\r\n      this.appointment = data.appointment;\r\n    } else {\r\n      this.dialogTitle = 'New Appointment';\r\n      this.appointment = new UpcomingAppointment({});\r\n    }\r\n    this.appointmentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.appointment.id],\r\n      img: [this.appointment.img],\r\n      email: [\r\n        this.appointment.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      date: [\r\n        formatDate(this.appointment.date, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required],\r\n      ],\r\n      time: [this.appointment.time, [Validators.required]],\r\n      mobile: [this.appointment.mobile, [Validators.required]],\r\n      doctor: [this.appointment.doctor, [Validators.required]],\r\n      injury: [this.appointment.injury],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.appointmentService.addUpcomingAppointment(\r\n      this.appointmentForm.getRawValue()\r\n    );\r\n  }\r\n}\r\n","<div class=\"addContainer\">\n  <div class=\"modalHeader\">\n    <div class=\"editRowModal\">\n      <div class=\"modalHeader clearfix\">\n        <img [src]='appointment.img' alt=\"avatar\">\n        <div class=\"modal-about\">\n          <div class=\"font-weight-bold p-t-5 p-l-10 font-17\">\n            {{dialogTitle}}</div>\n        </div>\n      </div>\n    </div>\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div mat-dialog-content>\n    <form class=\"register-form m-4\" [formGroup]=\"appointmentForm\" (ngSubmit)=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n            <mat-label>Doctor Name</mat-label>\n            <mat-select formControlName=\"doctor\" required>\n              <mat-option [value]=\"'Dr.Rajesh'\">\n                Dr.Rajesh\n              </mat-option>\n              <mat-option [value]=\"'Dr.Sarah Smith'\">\n                Dr.Sarah Smith\n              </mat-option>\n              <mat-option [value]=\"'Dr.Jay Soni'\">\n                Dr.Jay Soni\n              </mat-option>\n              <mat-option [value]=\"'Dr.Pooja Patel'\">\n                Dr.Pooja Patel\n              </mat-option>\n              <mat-option [value]=\"' Dr.Jamie Blair'\">\n                Dr.Jamie Blair\n              </mat-option>\n              <mat-option [value]=\"'Other'\">\n                Other\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"appointmentForm.get('doctor').hasError('required')\">\n              Doctor Name is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" required>\n            <mat-icon matSuffix>email</mat-icon>\n            <mat-error\n              *ngIf=\"appointmentForm.get('email').hasError('required') || appointmentForm.get('email').touched\">\n              Please enter a valid email address\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Choose a date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\" required>\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"appointmentForm.get('date').hasError('required')\">\n              Please select date\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Time</mat-label>\n            <input matInput formControlName=\"time\" required>\n            <mat-icon matSuffix>access_time</mat-icon>\n            <mat-error *ngIf=\"appointmentForm.get('time').hasError('required')\">\n              Please select time\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Mobile</mat-label>\n            <input matInput formControlName=\"mobile\" type=\"number\" required>\n            <mat-icon matSuffix>phone</mat-icon>\n            <mat-error *ngIf=\"appointmentForm.get('mobile').hasError('required')\">\n              Mobile is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Injury/Condition</mat-label>\n            <textarea matInput formControlName=\"injury\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-button-row\">\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!appointmentForm.valid\"\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"]}
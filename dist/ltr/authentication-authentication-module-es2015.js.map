{"version":3,"sources":["./src/app/authentication/locked/locked.component.ts","./src/app/authentication/locked/locked.component.html","./src/app/authentication/page500/page500.component.ts","./src/app/authentication/page500/page500.component.html","./src/app/authentication/authentication.module.ts","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/set-password/set-password.component.ts","./src/app/authentication/set-password/set-password.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html","./src/app/authentication/otp-modal/otp-modal.component.ts","./src/app/authentication/otp-modal/otp-modal.component.html","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html"],"names":[],"mappings":"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","file":"authentication-authentication-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/core/service/auth.service';\r\nimport { Role } from 'src/app/core/models/role';\r\n@Component({\r\n  selector: 'app-locked',\r\n  templateUrl: './locked.component.html',\r\n  styleUrls: ['./locked.component.scss'],\r\n})\r\nexport class LockedComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  userImg: string;\r\n  userFullName: string;\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      password: ['', Validators.required],\r\n    });\r\n    this.userImg = this.authService.currentUserValue.img;\r\n    this.userFullName =\r\n      this.authService.currentUserValue.firstName +\r\n      ' ' +\r\n      this.authService.currentUserValue.lastName;\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      const role = this.authService.currentUserValue.role;\r\n      if (role === Role.All || role === Role.Admin) {\r\n        this.router.navigate(['/admin/dashboard/main']);\r\n      } else if (role === Role.Doctor) {\r\n        this.router.navigate(['/doctor/dashboard']);\r\n      } else if (role === Role.Patient) {\r\n        this.router.navigate(['/patient/dashboard']);\r\n      } else {\r\n        this.router.navigate(['/authentication/signin']);\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-01.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"auth-locked\">\r\n              <div class=\"image\">\r\n                <img src={{userImg}} alt=\"User\">\r\n              </div>\r\n            </div>\r\n            <span class=\"auth-locked-title p-b-34 p-t-27\">\r\n              {{userFullName}}\r\n            </span>\r\n            <div class=\"text-center\">\r\n              <p class=\"txt1 p-b-20\">\r\n                Locked\r\n              </p>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your password here.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \"\r\n                type=\"submit\">\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-page500',\r\n  templateUrl: './page500.component.html',\r\n  styleUrls: ['./page500.component.scss'],\r\n})\r\nexport class Page500Component implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-05.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form>\r\n            <span class=\"error-header p-b-45\">\r\n              500\r\n            </span>\r\n            <span class=\"error-subheader2 p-b-5\">\r\n              Oops, Something went wrong. Please try after some times.\r\n            </span>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" type=\"submit\">\r\n                Go To Home Page\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { Page500Component } from './page500/page500.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button'; \r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SetPasswordComponent } from './set-password/set-password.component';\r\nimport { OtpModalComponent } from './otp-modal/otp-modal.component';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Page500Component,\r\n    Page404Component,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    LockedComponent,\r\n    ForgotPasswordComponent,\r\n    SetPasswordComponent,\r\n    OtpModalComponent\r\n  ],\r\n  imports: [\r\n    CommonModule, \r\n FormsModule,\r\n MatSelectModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule\r\n\r\n    \r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"src/app/core/service/auth.service\";\r\nimport { Role } from \"src/app/core/models/role\";\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.scss\"],\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  error = \"\";\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: [\"admin@hospital.org\", Validators.required],\r\n      password: [\"admin@123\", Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  adminSet() {\r\n    this.authForm.get(\"username\").setValue(\"admin@hospital.org\");\r\n    this.authForm.get(\"password\").setValue(\"admin@123\");\r\n  }\r\n  doctorSet() {\r\n    this.authForm.get(\"username\").setValue(\"doctor@hospital.org\");\r\n    this.authForm.get(\"password\").setValue(\"doctor@123\");\r\n  }\r\n  patientSet() {\r\n    this.authForm.get(\"username\").setValue(\"patient@hospital.org\");\r\n    this.authForm.get(\"password\").setValue(\"patient@123\");\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.error = \"\";\r\n    if (this.authForm.invalid) {\r\n      this.error = \"Username and Password not valid !\";\r\n      return;\r\n    } else {\r\n      this.authService\r\n        .login(this.f.username.value, this.f.password.value)\r\n        .subscribe(\r\n          (res) => {\r\n            if (res) {\r\n              const role = this.authService.currentUserValue.role;\r\n              if (role === Role.All || role === Role.Admin) {\r\n                this.router.navigate([\"/admin/dashboard/main\"]);\r\n              } else if (role === Role.Doctor) {\r\n                this.router.navigate([\"/doctor/dashboard\"]);\r\n              } else if (role === Role.Patient) {\r\n                this.router.navigate([\"/patient/dashboard\"]);\r\n              } else {\r\n                this.router.navigate([\"/authentication/signin\"]);\r\n              }\r\n            } else {\r\n              this.error = \"Invalid Login\";\r\n            }\r\n          },\r\n          (error) => {\r\n            this.error = error;\r\n            this.submitted = false;\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/main.jpg);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> Welcome to Physician Discovery </h2>\r\n          <p class=\"auth-signup-text text-muted\">Need an account?<a routerLink=\"/authentication/signup\"\r\n              class=\"sign-up-link\">Sign Up\r\n            </a></p>\r\n         \r\n          <h2 class=\"login-title\">Sign in</h2>\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Username</mat-label>\r\n                  <input matInput formControlName=\"username\" required />\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Username is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n \r\n            \r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\r\n                  <a class=\"show-pwd-icon\" href=\"#\" onClick=\"return false;\" matSuffix (click)=\"hide = !hide\"\r\n                    [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </a>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-between align-items-center mb-5\">\r\n              <div class=\"form-check\">\r\n                <label class=\"form-check-label\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\r\n                  <span class=\"form-check-sign\">\r\n                    <span class=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n              <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\r\n            </div>\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Login\r\n              </button>\r\n            </div>\r\n          </form>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { Page500Component } from './page500/page500.component';\r\nimport { SetPasswordComponent } from './set-password/set-password.component';\r\nimport { OtpModalComponent } from './otp-modal/otp-modal.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent\r\n  },\r\n  {\r\n    path: 'set-password',\r\n    component: SetPasswordComponent\r\n  },\r\n  {\r\n    path: 'otp',\r\n    component: OtpModalComponent\r\n  },\r\n  {\r\n    path: 'locked',\r\n    component: LockedComponent\r\n  },\r\n  {\r\n    path: 'page404',\r\n    component: Page404Component\r\n  },\r\n  {\r\n    path: 'page500',\r\n    component: Page500Component\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-set-password',\r\n  templateUrl: './set-password.component.html',\r\n  styleUrls: ['./set-password.component.scss']\r\n})\r\nexport class SetPasswordComponent implements OnInit {\r\n\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      password: ['', Validators.required],\r\n      cpassword: ['', Validators.required],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/main.jpg);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\">Forgot Password </h2>\r\n         \r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-label>New Password</mat-label>\r\n                    <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                    <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                      {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                    <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                      Password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n  \r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-label>Confirm Password</mat-label>\r\n                    <input matInput formControlName=\"cpassword\" [type]=\"chide ? 'password' : 'text'\" required>\r\n                    <mat-icon matSuffix (click)=\"chide = !chide\">\r\n                      {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                    <mat-error *ngIf=\"authForm.get('cpassword').hasError('required')\">\r\n                      Confirm Password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button [color]=\"'primary'\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Reset Password\r\n              </button>\r\n            </div>\r\n            \r\n            <div class=\"flex-sb-m w-full  p-b-20 register-bottom\">\r\n                <div>\r\n                  <span> Back to <a routerLink=\"/authentication/signin\">\r\n                    Sign in\r\n                    </a></span>\r\n                </div>\r\n              </div>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\ninterface Food {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss'],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition: 'before' | 'after' = 'after';\r\n  disabled = false;\r\n\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n\r\n  position = '';\r\n  industry = '';\r\n  experience = 0; \r\n  matcher = new ErrorStateMatcher();\r\n  salutation: any[] = ['Dr', 'MBBS'];\r\n  city: any[] = ['pune', 'Kolhapur' ];\r\n  state: any[] = ['Maharastra', 'UP', 'MP'];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  \r\n  \r\n\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      password: ['', Validators.required],\r\n      cpassword: ['', Validators.required],\r\n      salutation: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.required]\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n\r\n    this.setValues();\r\n\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/admin/dashboard/main']);\r\n    }\r\n  }\r\n\r\n  setValues() {\r\n    this.authForm.setValue({\r\n      salutation: 'Dr',\r\n      city: 'Mining',\r\n      state: 'Maharastra',\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <!-- <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-02.png);\"> -->\r\n        <div class=\"left-img\" style=\"background-image: url(assets/images/pages/main.jpg);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> Sign Up </h2>\r\n          <p class=\"auth-signup-text text-muted\">Please fill your details \r\n             <span class=\"step\"> Step 1 / 2</span></p> \r\n         \r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Salutation </mat-label>\r\n                  <mat-select formControlName=\"salutation\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-option *ngFor=\"let sal of salutation\" [value]=\"sal\">\r\n                      {{sal}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"authForm.get('salutation').hasError('required')\">\r\n                    You must make a selection\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>First Name </mat-label>\r\n                  <input matInput formControlName=\"username\" required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    First Name is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Last Name</mat-label>\r\n                  <input matInput formControlName=\"username\" required>\r\n                  <mat-icon matSuffix>face</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Last Name is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Phone Number</mat-label>\r\n                  <input matInput formControlName=\"username\" required>\r\n                  <mat-icon matSuffix>phone</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Please enter a valid Phone Number  \r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" required>\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\">\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row radio-grp-row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n\r\n              <mat-label class=\"gender-lable\"> Gender:</mat-label>\r\n                <mat-radio-group class=\"radio-btn\" aria-label=\"Select an option\">\r\n                  <mat-radio-button value=\"1\">Male</mat-radio-button>\r\n                  <mat-radio-button value=\"2\"> Female</mat-radio-button>\r\n                </mat-radio-group>\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>License Number</mat-label>\r\n                  <input matInput formControlName=\"username\" required>\r\n                  <mat-icon matSuffix>assignment_ind</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Please enter a valid License Number  \r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Physician Identification Number</mat-label>\r\n                  <input matInput formControlName=\"username\" required>\r\n                  <mat-icon matSuffix>assignment_ind</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\r\n                    Please enter a valid Physician Identification Number\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>State </mat-label>\r\n                  <mat-select formControlName=\"position\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-option *ngFor=\"let state of state\" [value]=\"state\">\r\n                      {{state}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"authForm.get('state').hasError('required')\">\r\n                    You must make a selection\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>City </mat-label>\r\n                  <mat-select formControlName=\"city\" [errorStateMatcher]=\"matcher\">\r\n                    <mat-option *ngFor=\"let city of city\" [value]=\"city\">\r\n                      {{city}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"authForm.get('city').hasError('required')\">\r\n                    You must make a selection\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n        \r\n\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Confirm Password</mat-label>\r\n                  <input matInput formControlName=\"cpassword\" [type]=\"chide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"chide = !chide\">\r\n                    {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('cpassword').hasError('required')\">\r\n                    Confirm Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n           \r\n\r\n            <div class=\"d-flex justify-content-between align-items-center mb-5\">\r\n              <div class=\"form-check\">\r\n                <label class=\"form-check-label\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> By clicking continue, you agree to our\r\n                  <span class=\"form-check-sign\">\r\n                    <span class=\"check\"></span>\r\n                  </span>\r\n                  <a routerLink=\"/authentication/signin\">\r\n                    Terms of Service\r\n                    </a> and our <a routerLink=\"/authentication/signin\"> Privacy Policy</a>\r\n                </label>\r\n              </div>\r\n             \r\n            </div>\r\n           \r\n            \r\n            <div class=\"container-auth-form-btn\">\r\n              <button mat-flat-button  color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Verify Email Address\r\n              </button>\r\n            </div>\r\n\r\n            <div class=\"flex-sb-m w-full  p-b-20 register-bottom\">\r\n              <div>\r\n                <span>Already Registered? <a routerLink=\"/authentication/signin\">\r\n                    Login\r\n                  </a></span>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-otp-modal',\r\n  templateUrl: './otp-modal.component.html',\r\n  styleUrls: ['./otp-modal.component.scss']\r\n})\r\nexport class OtpModalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"auth-container\">\r\n    <div class=\"row auth-main\">\r\n      <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n        <div class=\"left-img\" style=\"background-image: url(assets/images/pages/main.jpg);\">\r\n        </div>\r\n      </div>\r\n  \r\n\r\n      <div class=\"col-sm-6 auth-form-section\">\r\n        <div class=\"form-section\">\r\n          <div class=\"auth-wrapper\">\r\n            <h2 class=\"welcome-msg\">Sign Up </h2>\r\n            <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                Please fill your details\r\n            </span>\r\n            \r\n            <form  >\r\n              <div class=\"otp--sec  \">\r\n              \r\n                  <mat-form-field appearance=\"fill\" > \r\n                    <input #code1  matInput  maxlength=\"1\">\r\n                  </mat-form-field>\r\n                  <mat-form-field appearance=\"fill\" > \r\n                    <input #code2 matInput     maxlength=\"1\">\r\n                  </mat-form-field>\r\n                  <mat-form-field appearance=\"fill\" > \r\n                    <input #code3 matInput   maxlength=\"1\">\r\n                  </mat-form-field>\r\n                  <mat-form-field appearance=\"fill\" > \r\n                    <input #code4 matInput   maxlength=\"1\">\r\n                  </mat-form-field>\r\n                  <mat-form-field appearance=\"fill\" > \r\n                    <input #code5 matInput  maxlength=\"1\">\r\n                  </mat-form-field>\r\n                  <mat-form-field appearance=\"fill\" > \r\n                    <input #code6 matInput  maxlength=\"1\">\r\n                  </mat-form-field>\r\n                    \r\n                </div>\r\n              </form>   \r\n             \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n  \r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/authentication/set-password']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/main.jpg);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\">Forgot Password </h2>\r\n         \r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your Email Address below to reset your password\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" required>\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\">\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button [color]=\"'primary'\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n           \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}
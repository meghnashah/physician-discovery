{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/snack-bar.js"],"names":["_c0","_c1","enterDuration","_c2","MAT_RADIO_DEFAULT_OPTIONS","providedIn","factory","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","color","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatRadioGroup","multi","MatRadioChange","source","value","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_value","_name","_selected","_isInitialized","_labelPosition","_disabled","_required","_controlValueAccessorChangeFn","onTouched","change","_updateRadioButtonNames","v","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","checked","selected","_radios","forEach","radio","name","_markForCheck","isAlreadySelected","emit","markForCheck","fn","isDisabled","disabled","ɵfac","_MatRadioGroupBase_Factory","t","ɵdir","type","inputs","labelPosition","required","outputs","ctorParameters","propDecorators","ngDevMode","MatRadioGroup_Factory","ɵMatRadioGroup_BaseFactory","selectors","contentQueries","MatRadioGroup_ContentQueries","rf","ctx","dirIndex","MatRadioButton","_t","hostAttrs","exportAs","features","args","descendants","selector","providers","host","MatRadioButtonBase","_elementRef","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","elementRef","_focusMonitor","_radioDispatcher","_animationMode","_providerOverride","tabIndex","_uniqueId","id","_checked","_removeUniqueSelectionListener","listen","newCheckedState","notify","_setDisabled","_color","options","origin","focusVia","_inputElement","nativeElement","focus","monitor","subscribe","focusOrigin","_touch","stopMonitoring","disableRipple","event","stopPropagation","groupValueChanged","_emitChangeEvent","_MatRadioButtonBase_Factory","String","undefined","viewQuery","_MatRadioButtonBase_Query","first","ariaLabel","ariaLabelledby","ariaDescribedby","changeDetector","focusMonitor","radioDispatcher","animationMode","providerOverride","MatRadioButton_Factory","ɵcmp","hostVars","hostBindings","MatRadioButton_HostBindings","MatRadioButton_focus_HostBindingHandler","ngContentSelectors","decls","vars","consts","template","MatRadioButton_Template","MatRadioButton_Template_input_change_5_listener","$event","_onInputChange","MatRadioButton_Template_input_click_5_listener","_onInputClick","_r0","inputId","_isRippleDisabled","directives","styles","encapsulation","changeDetection","decorators","None","OnPush","MatRadioModule","MatRadioModule_Factory","ɵmod","ɵinj","imports","ngJitMode","declarations","exports","SimpleSnackBar_div_2_Template","_r2","SimpleSnackBar_div_2_Template_button_click_1_listener","ctx_r1","action","ctx_r0","data","MatSnackBarContainer_ng_template_1_Template","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","duration","horizontalPosition","verticalPosition","MAX_TIMEOUT","Math","pow","MatSnackBarRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","onAction","dismiss","_onExit","_finishDismiss","closed","exit","clearTimeout","_durationTimeoutId","next","complete","dismissWithAction","setTimeout","min","dispose","dismissedByAction","_onEnter","SimpleSnackBar","snackBarRef","SimpleSnackBar_Factory","SimpleSnackBar_Template","message","hasAction","matSnackBarAnimations","snackBarState","transform","opacity","MatSnackBarContainer","_ngZone","_changeDetectorRef","_platform","snackBarConfig","_announceDelay","_destroyed","_onAnnounce","_animationState","attachDomPortal","portal","_assertNotAttached","_applySnackBarClasses","_portalOutlet","_live","FIREFOX","_role","attachComponentPortal","attachTemplatePortal","fromState","toState","_completeExit","onEnter","run","detectChanges","_screenReaderAnnounce","setAttribute","_announceTimeoutId","onMicrotaskEmpty","pipe","element","panelClasses","panelClass","Array","isArray","cssClass","classList","add","hasAttached","Error","runOutsideAngular","inertElement","querySelector","liveElement","focusedElement","isBrowser","document","activeElement","HTMLElement","contains","removeAttribute","appendChild","MatSnackBarContainer_Factory","MatSnackBarContainer_Query","MatSnackBarContainer_HostBindings","MatSnackBarContainer_animation_state_done_HostBindingHandler","onAnimationEnd","MatSnackBarContainer_Template","animation","Default","animations","MatSnackBarModule","MatSnackBarModule_Factory","entryComponents","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBar","_overlay","_injector","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","parent","_openedSnackBarRef","component","config","_attach","_config","Object","assign","openFromComponent","overlayRef","userInjector","viewContainerRef","injector","create","useValue","containerPortal","containerRef","attach","instance","content","userConfig","_createOverlay","container","_attachSnackBarContainer","$implicit","_createInjector","contentRef","observe","HandsetPortrait","detachments","state","overlayElement","matches","remove","announce","_animateSnackBar","afterDismissed","clear","enter","afterOpened","_dismissAfter","overlayConfig","direction","positionStrategy","position","global","isRtl","isLeft","isRight","left","right","centerHorizontally","top","bottom","MatSnackBar_Factory","ɵprov","token"],"mappings":"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","file":"default~doctor-doctor-module~patient-patient-module-es5.js","sourcesContent":["import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return ɵMatRadioGroup_BaseFactory(t || MatRadioGroup); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\nconst ɵMatRadioGroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                ],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            if (this.checked) {\n                this.radioGroup.selected = this;\n            }\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(String)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String },\n    { type: undefined },\n    { type: String }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }, { type: String }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", null)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵelement(3, \"span\", 3);\n        ɵngcc0.ɵɵelement(4, \"span\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"span\", 7);\n        ɵngcc0.ɵɵelement(8, \"span\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"span\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be removed since it causes some a11y issues (see #21266).\n                    '[attr.tabindex]': 'null',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_GROUP]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵfac = function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); };\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n//# sourceMappingURL=radio.js.map","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgZone, ElementRef, ChangeDetectorRef, ViewChild, NgModule, Injector, TemplateRef, ɵɵdefineInjectable, ɵɵinject, INJECTOR, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { Platform } from '@angular/cdk/platform';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/portal';\nimport * as ɵngcc5 from '@angular/cdk/overlay';\nimport * as ɵngcc6 from '@angular/cdk/a11y';\nimport * as ɵngcc7 from '@angular/cdk/layout';\n\nfunction SimpleSnackBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function SimpleSnackBar_div_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.action(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.data.action);\n} }\nfunction MatSnackBarContainer_ng_template_1_Template(rf, ctx) { }\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe(() => this.dismiss());\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nSimpleSnackBar.ɵfac = function SimpleSnackBar_Factory(t) { return new (t || SimpleSnackBar)(ɵngcc0.ɵɵdirectiveInject(MatSnackBarRef), ɵngcc0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA)); };\nSimpleSnackBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SimpleSnackBar, selectors: [[\"simple-snack-bar\"]], hostAttrs: [1, \"mat-simple-snackbar\"], decls: 3, vars: 2, consts: [[\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]], template: function SimpleSnackBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, SimpleSnackBar_div_2_Template, 3, 1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton], styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nSimpleSnackBar.ctorParameters = () => [\n    { type: MatSnackBarRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SimpleSnackBar, [{\n        type: Component,\n        args: [{\n                selector: 'simple-snack-bar',\n                template: \"<span>{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-simple-snackbar'\n                },\n                styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DATA]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0\n        }))),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platform = _platform;\n        this.snackBarConfig = snackBarConfig;\n        /** The number of milliseconds to wait before announcing the snack bar's content. */\n        this._announceDelay = 150;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has announced to screen readers. */\n        this._onAnnounce = new Subject();\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            this._applySnackBarClasses();\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n        // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n        // `MatSnackBar.open`).\n        this._animationState = 'hidden';\n        // Mark this element with an 'exit' attribute to indicate that the snackbar has\n        // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n        // test harness.\n        this._elementRef.nativeElement.setAttribute('mat-exit', '');\n        // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n        // long enough to visually read it either, so clear the timeout for announcing.\n        clearTimeout(this._announceTimeoutId);\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n            this._onExit.next();\n            this._onExit.complete();\n        });\n    }\n    /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n    _applySnackBarClasses() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (!this._announceTimeoutId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._announceTimeoutId = setTimeout(() => {\n                    const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n                    const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n                    if (inertElement && liveElement) {\n                        // If an element in the snack bar content is focused before being moved\n                        // track it and restore focus after moving to the live region.\n                        let focusedElement = null;\n                        if (this._platform.isBrowser &&\n                            document.activeElement instanceof HTMLElement &&\n                            inertElement.contains(document.activeElement)) {\n                            focusedElement = document.activeElement;\n                        }\n                        inertElement.removeAttribute('aria-hidden');\n                        liveElement.appendChild(inertElement);\n                        focusedElement === null || focusedElement === void 0 ? void 0 : focusedElement.focus();\n                        this._onAnnounce.next();\n                        this._onAnnounce.complete();\n                    }\n                }, this._announceDelay);\n            });\n        }\n    }\n}\nMatSnackBarContainer.ɵfac = function MatSnackBarContainer_Factory(t) { return new (t || MatSnackBarContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(MatSnackBarConfig)); };\nMatSnackBarContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSnackBarContainer, selectors: [[\"snack-bar-container\"]], viewQuery: function MatSnackBarContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [1, \"mat-snack-bar-container\"], hostVars: 1, hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@state.done\", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) { return ctx.onAnimationEnd($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 2, consts: [[\"aria-hidden\", \"true\"], [\"cdkPortalOutlet\", \"\"]], template: function MatSnackBarContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSnackBarContainer_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-live\", ctx._live)(\"role\", ctx._role);\n    } }, directives: [ɵngcc4.CdkPortalOutlet], styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"], encapsulation: 2, data: { animation: [matSnackBarAnimations.snackBarState] } });\nMatSnackBarContainer.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Platform },\n    { type: MatSnackBarConfig }\n];\nMatSnackBarContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSnackBarContainer, [{\n        type: Component,\n        args: [{\n                selector: 'snack-bar-container',\n                template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\"></div>\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than\n                // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                // because it might cause snack bars that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matSnackBarAnimations.snackBarState],\n                host: {\n                    'class': 'mat-snack-bar-container',\n                    '[@state]': '_animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc3.Platform }, { type: MatSnackBarConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSnackBarModule {\n}\nMatSnackBarModule.ɵfac = function MatSnackBarModule_Factory(t) { return new (t || MatSnackBarModule)(); };\nMatSnackBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSnackBarModule });\nMatSnackBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            OverlayModule,\n            PortalModule,\n            CommonModule,\n            MatButtonModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSnackBarModule, { declarations: function () { return [MatSnackBarContainer, SimpleSnackBar]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        CommonModule,\n        MatButtonModule,\n        MatCommonModule]; }, exports: function () { return [MatSnackBarContainer, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSnackBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    MatButtonModule,\n                    MatCommonModule,\n                ],\n                exports: [MatSnackBarContainer, MatCommonModule],\n                declarations: [MatSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MatSnackBarContainer, SimpleSnackBar]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n        /** The component that should be rendered as the snack bar's simple component. */\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        /** The container component that attaches the provided template or component. */\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        /** The CSS class to apply for handset mode. */\n        this.handsetCssClass = 'mat-snack-bar-handset';\n    }\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = Object.assign(Object.assign({}, this._defaultConfig), config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = Object.assign(Object.assign(Object.assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe(state => {\n            const classList = overlayRef.overlayElement.classList;\n            state.matches ? classList.add(this.handsetCssClass) : classList.remove(this.handsetCssClass);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = (config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl));\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data }\n            ]\n        });\n    }\n}\nMatSnackBar.ɵfac = function MatSnackBar_Factory(t) { return new (t || MatSnackBar)(ɵngcc0.ɵɵinject(ɵngcc5.Overlay), ɵngcc0.ɵɵinject(ɵngcc6.LiveAnnouncer), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc7.BreakpointObserver), ɵngcc0.ɵɵinject(MatSnackBar, 12), ɵngcc0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); };\nMatSnackBar.ɵprov = ɵɵdefineInjectable({ factory: function MatSnackBar_Factory() { return new MatSnackBar(ɵɵinject(Overlay), ɵɵinject(LiveAnnouncer), ɵɵinject(INJECTOR), ɵɵinject(BreakpointObserver), ɵɵinject(MatSnackBar, 12), ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); }, token: MatSnackBar, providedIn: MatSnackBarModule });\nMatSnackBar.ctorParameters = () => [\n    { type: Overlay },\n    { type: LiveAnnouncer },\n    { type: Injector },\n    { type: BreakpointObserver },\n    { type: MatSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: MatSnackBarConfig, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSnackBar, [{\n        type: Injectable,\n        args: [{ providedIn: MatSnackBarModule }]\n    }], function () { return [{ type: ɵngcc5.Overlay }, { type: ɵngcc6.LiveAnnouncer }, { type: ɵngcc0.Injector }, { type: ɵngcc7.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: MatSnackBarConfig, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n\n//# sourceMappingURL=snack-bar.js.map"]}